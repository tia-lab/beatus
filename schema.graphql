"""
Block of type ‚öì Anchor link (anchor_link)
"""
type AnchorLinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  anchorId: String!
  id: ItemId!
  text: String!
}

input BlogPostModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  excerpt: TextFilter
  postTitle: StringFilter
  seoAnalysis: JsonFilter
  seoTags: SeoFilter
  slug: SlugFilter
  thumbnail: FileFilter
  OR: [BlogPostModelFilter]
  AND: [BlogPostModelFilter]
}

enum BlogPostModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  postTitle_ASC
  postTitle_DESC
}

union BlogPostModelSectionsField = SectionHeroRecord | SectionTextRecord

type BlogPostModelSectionsFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [BlogPostModelSectionsField!]!
}

"""
Record of type ‚úçÔ∏è Blog post (blog_post)
"""
type BlogPostRecord implements RecordInterface {
  _allExcerptLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allPostTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allSectionsLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogPostModelSectionsFieldListListNonNullMultiLocaleField!]
  _allSeoTagsLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allSlugLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allThumbnailLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [FileFieldNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  excerpt(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  id: ItemId!
  postTitle(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  redirect: RedirectLinkRecord
  sections(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BlogPostModelSectionsField!]!
  seoAnalysis: JsonField
  seoTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  slug(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  thumbnail(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): FileField!
}

"""
Block of type üéüÔ∏è Booking Modal card (booking_modal_card)
"""
type BookingModalCardRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  image: ImageBlockRecord!
  link: LinkRecord!
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
}

"""
Record of type üéüÔ∏è Booking modal (booking_modal)
"""
type BookingModalRecord implements RecordInterface {
  _allTabsLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BookingModalTabRecordListListNonNullMultiLocaleField!]
  _allTitleLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  tabs(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [BookingModalTabRecord!]!
  title(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

"""
Block of type üéüÔ∏è Booking Modal tab (booking_modal_tab)
"""
type BookingModalTabRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  cards: [BookingModalCardRecord!]!
  id: ItemId!
  title: String!
}

type BookingModalTabRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [BookingModalTabRecord!]!
}

"""
Specifies how to filter Boolean fields
"""
input BooleanFilter {
  """
  Search for records with an exact match
  """
  eq: BooleanType
}

"""
Represents `true` or `false` values.
"""
scalar BooleanType

type CollectionMetadata {
  count: IntType!
}

enum ColorBucketType {
  red
  orange
  pink
  cyan
  purple
  blue
  yellow
  green
  brown
  grey
  white
  black
}

type ColorField {
  alpha: IntType!
  blue: IntType!
  cssRgb: String!
  green: IntType!
  hex: String!
  red: IntType!
}

"""
Specifies how to filter by creation datetime
"""
input CreatedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

scalar CustomData

"""
A ISO 8601 compliant datetime value
"""
scalar DateTime

union DetailContentModelContentBlocksField =
  | ImageBlockRecord
  | LinkRecord
  | SpacerRecord

type DetailContentModelContentField {
  blocks: [DetailContentModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

"""
Block of type üìî Detail content (detail_content)
"""
type DetailContentRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: DetailContentModelContentField
  id: ItemId!
}

type DetailContentRecordNonNullMultiLocaleField {
  locale: SiteLocale
  value: DetailContentRecord!
}

input FaqCategoryModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  slug: SlugFilter
  title: StringFilter
  OR: [FaqCategoryModelFilter]
  AND: [FaqCategoryModelFilter]
}

enum FaqCategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""
Record of type ‚ùî Faq category (faq_category)
"""
type FaqCategoryRecord implements RecordInterface {
  _allSlugLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  slug(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
}

input FaqModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  category: LinksFilter
  description: TextFilter
  title: StringFilter
  OR: [FaqModelFilter]
  AND: [FaqModelFilter]
}

enum FaqModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""
Record of type ‚ùì Faq (faq)
"""
type FaqRecord implements RecordInterface {
  _allDescriptionLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allReferencingHomes(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenHomeAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: HomeModelFilter
    orderBy: [HomeModelOrderBy] = [_updatedAt_DESC]
  ): [HomeRecord!]!

  """
  Returns meta information regarding a record collection
  """
  _allReferencingHomesMeta(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenHomeAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: HomeModelFilter
  ): CollectionMetadata!
  _allReferencingPages(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenPageAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: PageModelFilter
    orderBy: [PageModelOrderBy] = [position_ASC]
  ): [PageRecord!]!

  """
  Returns meta information regarding a record collection
  """
  _allReferencingPagesMeta(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenPageAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: PageModelFilter
  ): CollectionMetadata!
  _allReferencingRetreats(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenRetreatAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RetreatModelFilter
    orderBy: [RetreatModelOrderBy] = [position_ASC]
  ): [RetreatRecord!]!

  """
  Returns meta information regarding a record collection
  """
  _allReferencingRetreatsMeta(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenRetreatAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RetreatModelFilter
  ): CollectionMetadata!
  _allReferencingRooms(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenRoomAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RoomModelFilter
    orderBy: [RoomModelOrderBy] = [position_ASC]
  ): [RoomRecord!]!

  """
  Returns meta information regarding a record collection
  """
  _allReferencingRoomsMeta(
    """
    Specifies how to filter linking records
    """
    through: InverseRelationshipFilterBetweenRoomAndFaq

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RoomModelFilter
  ): CollectionMetadata!
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  button: LinkRecord
  category: [FaqCategoryRecord!]!
  description(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  id: ItemId!
  position: IntType
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

enum FaviconType {
  icon
  appleTouchIcon
  msApplication
}

type FileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """
    Maximum image dimension (defaults to 24px)
    """
    size: Int! = 24

    """
    Image quality (defaults to 70%)
    """
    quality: Int! = 70

    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams

    """
    Specify a custom `sizes` attribute for the image
    """
    sizes: String

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType
}

interface FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """
    Maximum image dimension (defaults to 24px)
    """
    size: Int! = 24

    """
    Image quality (defaults to 70%)
    """
    quality: Int! = 70

    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams

    """
    Specify a custom `sizes` attribute for the image
    """
    sizes: String

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType
}

type FileFieldNonNullMultiLocaleField {
  locale: SiteLocale
  value: FileField!
}

"""
Specifies how to filter Single-file/image fields
"""
input FileFilter {
  """
  Search for records with an exact match. The specified value must be an Upload ID
  """
  eq: UploadId

  """
  Exclude records with an exact match. The specified value must be an Upload ID
  """
  neq: UploadId

  """
  Filter records that have one of the specified uploads
  """
  in: [UploadId]

  """
  Filter records that do not have one of the specified uploads
  """
  notIn: [UploadId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar FloatType

"""
Block of type ‚úÖ Form field checkbox (form_field_checkbox)
"""
type FormFieldCheckboxRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  checked: BooleanType!
  fieldId: String!
  halfSize: BooleanType!
  id: ItemId!
  label(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  required: BooleanType!
}

"""
Block of type üìÅ Form field item (form_field_item)
"""
type FormFieldItemRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  title: String!
  value: String!
}

"""
Block of type üü¢ Form field radio group (form_field_radio_group)
"""
type FormFieldRadioGroupRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  defaultValue: String
  fieldId: String!
  halfSize: BooleanType!
  id: ItemId!
  items: [FormFieldItemRecord!]!
  label: String!
  placeholder: String
  required: BooleanType!
}

"""
Block of type ‚õëÔ∏è Form field reCaptcha (form_field_recaptcha)
"""
type FormFieldRecaptchaRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  halfSize: BooleanType!
  id: ItemId!
  invisible: BooleanType!
  siteKey: String!
  version: String!
}

"""
Block of type üè∑Ô∏è Form field select (form_field_select)
"""
type FormFieldSelectRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  defaultValue: String
  fieldId: String!
  halfSize: BooleanType!
  id: ItemId!
  items: [FormFieldItemRecord!]!
  label: String!
  placeholder: String
  required: BooleanType!
}

"""
Block of type ‚ÜîÔ∏è Form Seprator (form_field_seprator)
"""
type FormFieldSepratorRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  halfSize: BooleanType!
  id: ItemId!
}

"""
Block of type üì© Form field Submit (form_field_submit)
"""
type FormFieldSubmitRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  buttonText: String!
  id: ItemId!
}

input FormModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  errorMessage: TextFilter
  formspreeId: StringFilter
  pendingMessage: TextFilter
  redirect: BooleanFilter
  slug: SlugFilter
  successMessage: TextFilter
  title: StringFilter
  OR: [FormModelFilter]
  AND: [FormModelFilter]
}

union FormModelFormBuilderField =
  | FormFieldCheckboxRecord
  | FormFieldRadioGroupRecord
  | FormFieldRecaptchaRecord
  | FormFieldSelectRecord
  | FormFieldSepratorRecord
  | FormFieldSubmitRecord
  | TextFieldRecord

type FormModelFormBuilderFieldListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [FormModelFormBuilderField!]!
}

enum FormModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  formspreeId_ASC
  formspreeId_DESC
  redirect_ASC
  redirect_DESC
  title_ASC
  title_DESC
}

"""
Record of type ‚úâÔ∏è Form (form)
"""
type FormRecord implements RecordInterface {
  _allErrorMessageLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allFormBuilderLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [FormModelFormBuilderFieldListListNonNullMultiLocaleField!]
  _allFormspreeIdLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allPendingMessageLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allSuccessMessageLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  errorMessage(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  formBuilder(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [FormModelFormBuilderField!]!
  formspreeId(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  id: ItemId!
  pendingMessage(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  position: IntType
  redirect: BooleanType!
  redirectLink: RedirectLinkRecord
  slug: String!
  successMessage(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  title: String!
}

type GlobalSeoField {
  facebookPageUrl: String
  fallbackSeo: SeoField
  siteName: String
  titleSuffix: String
  twitterAccount: String
}

"""
Linking fields
"""
enum HomeModelFieldsReferencingFaqModel {
  home_section
  home_sectionBuilder
  home_sectionBuilder__sectionBuilder_sectionBuilder__sectionFaq_faqs
  home_section__sectionBuilder_sectionBuilder__sectionFaq_faqs
}

input HomeModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bookingBar: BooleanFilter
  seoAnalysis: JsonFilter
  seoMeta: SeoFilter
  title: StringFilter
  OR: [HomeModelFilter]
  AND: [HomeModelFilter]
}

enum HomeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bookingBar_ASC
  bookingBar_DESC
  title_ASC
  title_DESC
}

"""
Record of type üè† Home (home)
"""
type HomeRecord implements RecordInterface {
  _allRedirectLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RedirectLinkRecordMultiLocaleField!]
  _allSectionBuilderLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SectionBuilderRecordNonNullMultiLocaleField!]
  _allSeoMetaLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bookingBar: BooleanType!
  id: ItemId!
  redirect(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RedirectLinkRecord
  section: SectionBuilderRecord!
  sectionBuilder(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SectionBuilderRecord!
  seoAnalysis: JsonField
  seoMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  title: String
}

type ImageAltFileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """
    Maximum image dimension (defaults to 24px)
    """
    size: Int! = 24

    """
    Image quality (defaults to 70%)
    """
    quality: Int! = 70

    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint!
  format: String!
  height: IntType!
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams

    """
    Specify a custom `sizes` attribute for the image
    """
    sizes: String

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage!
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType!
}

"""
Block of type üåÖ Image (image_block)
"""
type ImageBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  asset: ImageAltFileField!
  assetWinter: ImageAltFileField
  id: ItemId!
  isSeason: BooleanType!
  priority: BooleanType!
}

type ImageFileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """
    Maximum image dimension (defaults to 24px)
    """
    size: Int! = 24

    """
    Image quality (defaults to 70%)
    """
    quality: Int! = 70

    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint!
  format: String!
  height: IntType!
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams

    """
    Specify a custom `sizes` attribute for the image
    """
    sizes: String

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage!
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType!
}

"""
Block of type üé† Image Gallery (image_gallery_block)
"""
type ImageGalleryBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  assets: [ImageFileField!]!
  id: ItemId!
}

input ImgixParams {
  """
  Aspect Ratio

  Specifies an aspect ratio to maintain when resizing and cropping the image

  Depends on: `fit=crop`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/aspect-ratio)
  """
  ar: String

  """
  Automatic

  Applies automatic enhancements to images.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/automatic)
  """
  auto: [ImgixParamsAuto!]

  """
  Background Removal Fallback

  Overrides default fallback behavior for bg-remove failures.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-removal-fallback)
  """
  bgRemoveFallback: BooleanType

  """
  Background Removal Foreground Type

  Specifies the image foreground type for background removal.

  Depends on: `bg-remove=true`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-removal-foreground-type)
  """
  bgRemoveFgType: [ImgixParamsBgRemoveFgType!]

  """
  Background Removal Semi Transparency

  Enables background removal while retaining semi-transparent areas.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-removal-semi-transparency)
  """
  bgRemoveSemiTransparency: BooleanType

  """
  Background Removal

  Removes background from image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-removal)
  """
  bgRemove: BooleanType

  """
  Background Replace Fallback

  Overrides default fallback behavior for bg-replace failures.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-replace-fallback)
  """
  bgReplaceFallback: BooleanType

  """
  Background Replacement Negative Prompt

  Provides a negative text suggestion for background replacement.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-replacement-negative-prompt)
  """
  bgReplaceNegPrompt: String

  """
  Background Replacement

  Replaces background from image using a string based prompt.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/background-replacement)
  """
  bgReplace: String

  """
  Background Color

  Colors the background of padded and partially-transparent images.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/background-color)
  """
  bg: String

  """
  Blend Align

  Changes the blend alignment relative to the parent image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-align)
  """
  blendAlign: [ImgixParamsBlendAlign!]

  """
  Blend Alpha

  Changes the alpha of the blend image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-alpha)
  """
  blendAlpha: IntType

  """
  Blend Color

  Specifies a color to use when applying the blend.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-color)
  """
  blendColor: String

  """
  Blend Crop

  Specifies the type of crop for blend images.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-crop)
  """
  blendCrop: [ImgixParamsBlendCrop!]

  """
  Blend Fit

  Specifies the fit mode for blend images.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-fit)
  """
  blendFit: ImgixParamsBlendFit

  """
  Blend Height

  Adjusts the height of the blend image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-height)
  """
  blendH: FloatType

  """
  Blend Mode

  Sets the blend mode for a blend image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-mode)
  """
  blendMode: ImgixParamsBlendMode

  """
  Blend Padding

  Applies padding to the blend image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-padding)
  """
  blendPad: IntType

  """
  Blend Size

  Adjusts the size of the blend image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-size)
  """
  blendSize: ImgixParamsBlendSize

  """
  Blend Width

  Adjusts the width of the blend image.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-width)
  """
  blendW: FloatType

  """
  Blend X Position

  Adjusts the x-offset of the blend image relative to its parent.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-x-position)
  """
  blendX: IntType

  """
  Blend Y Position

  Adjusts the y-offset of the blend image relative to its parent.

  Depends on: `blend`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend-y-position)
  """
  blendY: IntType

  """
  Blend

  Specifies the location of the blend image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/blending/blend)
  """
  blend: String

  """
  Gaussian Blur

  Applies a gaussian blur to an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/gaussian-blur)
  """
  blur: IntType

  """
  Border Bottom

  Sets bottom border of an image.

  Depends on: `border`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/border-bottom)
  """
  borderBottom: IntType

  """
  Border Left

  Sets left border of an image.

  Depends on: `border`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/border-left)
  """
  borderLeft: IntType

  """
  Inner Border Radius

  Sets the inner radius of the image's border in pixels.

  Depends on: `border`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/inner-border-radius)
  """
  borderRadiusInner: String

  """
  Outer Border Radius

  Sets the outer radius of the image's border in pixels.

  Depends on: `border`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/outer-border-radius)
  """
  borderRadius: String

  """
  Border Right

  Sets right border of an image.

  Depends on: `border`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/border-right)
  """
  borderRight: IntType

  """
  Border Top

  Sets top border of an image.

  Depends on: `border`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/border-top)
  """
  borderTop: IntType

  """
  Border Size & Color

  Applies a border to an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size)
  """
  border: String

  """
  Brightness

  Adjusts the brightness of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/brightness)
  """
  bri: IntType

  """
  Client Hints

  Sets one or more Client-Hints headers

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/client-hints)
  """
  ch: [ImgixParamsCh!]

  """
  Chroma Subsampling

  Specifies the output chroma subsampling rate.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/chroma-subsampling)
  """
  chromasub: IntType

  """
  Color Quantization

  Limits the number of unique colors in an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/color-quantization)
  """
  colorquant: IntType

  """
  Palette Color Count

  Specifies how many colors to include in a palette-extraction response.

  Depends on: `palette`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/color-palette/palette-color-count)
  """
  colors: IntType

  """
  Contrast

  Adjusts the contrast of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/contrast)
  """
  con: IntType

  """
  Mask Corner Radius

  Specifies the radius value for a rounded corner mask.

  Depends on: `mask=corners`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/mask-image/mask-corner-radius)
  """
  cornerRadius: String

  """
  Crop Mode

  Specifies how to crop an image.

  Depends on: `fit=crop`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/crop-mode)
  """
  crop: [ImgixParamsCrop!]

  """
  Color Space

  Specifies the color space of the output image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/color-space)
  """
  cs: ImgixParamsCs

  """
  Download

  Forces a URL to use send-file in its response.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/download)
  """
  dl: String

  """
  Dots Per Inch

  Sets the DPI value in the EXIF header.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/dots-per-inch)
  """
  dpi: IntType

  """
  Device Pixel Ratio

  Adjusts the device-pixel ratio of the output image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/device-pixel-ratio)
  """
  dpr: FloatType

  """
  Duotone Alpha

  Changes the alpha of the duotone effect atop the source image.

  Depends on: `duotone`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/duotone-alpha)
  """
  duotoneAlpha: IntType

  """
  Duotone

  Applies a duotone effect to the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/duotone)
  """
  duotone: String

  """
  Exposure

  Adjusts the exposure of the output image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/exposure)
  """
  exp: IntType

  """
  Url Expiration Timestamp

  A Unix timestamp specifying a UTC time. Requests made to this URL after that time will output a 404 status code.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/expiration)
  """
  expires: IntType

  """
  Face Blur

  Specifies the amount of blur to apply to detected faces. Defaults to 0.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/face-detection/face-blur)
  """
  faceBlur: IntType

  """
  Face Pixelation

  Specifies the pixelation amount of the face.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/face-detection/face-pixelation)
  """
  facePixel: IntType

  """
  Face Index

  Selects a face to crop to.

  Depends on: `fit=facearea`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/face-detection/face-index)
  """
  faceindex: IntType

  """
  Face Padding

  Adjusts padding around a selected face.

  Depends on: `fit=facearea`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/face-detection/face-padding)
  """
  facepad: FloatType

  """
  Json Face Data

  Specifies that face data should be included in output when combined with `fm=json`.

  Depends on: `fm=json`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/face-detection/json-face-data)
  """
  faces: IntType

  """
  Fill Color

  Sets the fill color for images with additional space created by the fit setting

  Depends on: `fill=solid`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-color)
  """
  fillColor: String

  """
  Fill Generative Fallback

  Sets the fallback behavior for generative fill.

  Depends on: `fit=fill`, `fill=gen`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-generative-fallback)
  """
  fillGenFallback: BooleanType

  """
  Fill Generative Negative Prompt

  Provides a negative text suggestion to the generative fill parameter. Used to reduce the probability of a subject, detail, or object appearing in generative output.

  Depends on: `fit=fill`, `fill=gen`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-generative-negative-prompt)
  """
  fillGenNegPrompt: String

  """
  Fill Generative Position

  Sets the position of the Origin Image in relation to the generative fill.

  Depends on: `fit=fill`, `fill=gen`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-generative-position)
  """
  fillGenPos: [ImgixParamsFillGenPos!]

  """
  Fill Generative Prompt

  Provides a text suggestion to the generative fill parameter.

  Depends on: `fit=fill`, `fill=gen`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-generative-prompt)
  """
  fillGenPrompt: String

  """
  Fill Generative Seed

  Sets the generative seed value. Used to generate similar outputs from different prompts.

  Depends on: `fit=fill`, `fill=gen`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-generative-seed)
  """
  fillGenSeed: IntType

  """
  Fill Gradient Color Space

  Defines the color space as linear, sRGB, Oklab, HSL, or LCH for gradient color interpolation

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-color-space)
  """
  fillGradientCs: ImgixParamsFillGradientCs

  """
  Fill Gradient Linear Direction

  The fill-gradient-linear-direction specifies the gradient's direction, flowing towards the bottom, top, right, or left

  Depends on: `fit=fill`, `fill=gen`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-linear-direction)
  """
  fillGradientLinearDirection: [ImgixParamsFillGradientLinearDirection!]

  """
  Fill Gradient Linear

  Blends a gradient between two colors, {color1} and {color2}, along a straight path

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-linear)
  """
  fillGradientLinear: String

  """
  Fill Gradient Radial Radius

  Parameter defines the radial gradient's radius as pixels or a percentage (0.0-1.0) of the image's smallest dimension

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-radial-radius)
  """
  fillGradientRadialRadius: String

  """
  Fill Gradient Radial X

  Specifies the location of the radial gradient's center along the x-axis, using either a pixel value or a floating point percentage (ranging from 0.0 to 1.0) of the image's width

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-radial-x)
  """
  fillGradientRadialX: FloatType

  """
  Fill Gradient Radial Y

  Parameter sets the radial gradient's center on the y-axis, using pixels or a 0.0 to 1.0 percentage of the image's height

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-radial-y)
  """
  fillGradientRadialY: FloatType

  """
  Fill Gradient Radial

  The fill-gradient-radial parameter creates a circular gradient transitioning from a central color (Color1) to an outer color (Color2)

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-radial)
  """
  fillGradientRadial: String

  """
  Fill Gradient Type

  Specifies if a gradient is radial (circular) or linear (straight)

  Depends on: `fit=fill`, `fill=gradient`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-gradient-type)
  """
  fillGradientType: ImgixParamsFillGradientType

  """
  Fill Mode

  Determines how to fill in additional space created by the fit setting

  Depends on: `fit`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/fill-mode)
  """
  fill: ImgixParamsFill

  """
  Resize Fit Mode

  Specifies how to map the source image to the output image dimensions.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/resize-fit-mode)
  """
  fit: ImgixParamsFit

  """
  Flip Axis

  Flips an image on a specified axis.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/rotation/flip-axis)
  """
  flip: ImgixParamsFlip

  """
  Output Format

  Changes the format of the output image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/output-format)
  """
  fm: ImgixParamsFm

  """
  Focal Point Debug

  Displays crosshairs identifying the location of the set focal point

  Depends on: `fit=crop`, `crop=focalpoint`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/focal-point-crop/focal-point-debug)
  """
  fpDebug: BooleanType

  """
  Focal Point X Position

  Sets the relative horizontal value for the focal point of an image

  Depends on: `fit=crop`, `crop=focalpoint`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/focal-point-crop/focal-point-x-position)
  """
  fpX: FloatType

  """
  Focal Point Y Position

  Sets the relative vertical value for the focal point of an image

  Depends on: `fit=crop`, `crop=focalpoint`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/focal-point-crop/focal-point-y-position)
  """
  fpY: FloatType

  """
  Focal Point Zoom

  Sets the relative zoom value for the focal point of an image

  Depends on: `fit=crop`, `crop=focalpoint`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/focal-point-crop/focal-point-zoom)
  """
  fpZ: FloatType

  """
  Frames Per Second

  Specifies the framerate of the generated image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation/frames-per-second)
  """
  fps: IntType

  """
  Frame Selection

  Specifies the frame of an animated image to use.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation/frame-selection)
  """
  frame: String

  """
  Gamma

  Adjusts the gamma of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/gamma)
  """
  gam: IntType

  """
  Animated Gif Quality

  Specifies the quality of the animated gif. The higher the value, the better more compression is applied.

  Depends on: `fm=gif`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation/animated-gif-quality)
  """
  gifQ: IntType

  """
  Grid Colors

  Sets grid colors for the transparency checkerboard grid.

  Depends on: `transparency`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/grid-colors)
  """
  gridColors: String

  """
  Grid Size

  Sets grid size for the transparency checkerboard grid.

  Depends on: `transparency`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/grid-size)
  """
  gridSize: IntType

  """
  Image Height

  Adjusts the height of the output image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/image-height)
  """
  h: FloatType

  """
  Highlight

  Adjusts the highlights of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/highlight)
  """
  high: IntType

  """
  Halftone

  Applies a half-tone effect to the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/halftone)
  """
  htn: IntType

  """
  Hue Shift

  Adjusts the hue of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/hue-shift)
  """
  hue: IntType

  """
  Frame Interval

  Displays every Nth frame starting with the first frame.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation/frame-interval)
  """
  interval: IntType

  """
  Invert

  Inverts the colors on the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/invert)
  """
  invert: BooleanType

  """
  Iptc Passthrough

  Determine if IPTC data should be passed for JPEG images.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/iptc-passthrough)
  """
  iptc: ImgixParamsIptc

  """
  Jpg Progressive

  Specifies whether or not a jpg/jpeg uses progressive (true) or baseline (false)

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/jpg-progressive)
  """
  jpgProgressive: BooleanType

  """
  License Plate Blur

  Specifies the amount of blur to apply to detected license plates. Defaults to 0.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/license-plate-detection/license-plate-blur)
  """
  lpBlur: IntType

  """
  Animation Loop Count

  Specifies the number of times an animated image should repeat. A value of 0 means infinite looping.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation)
  """
  loop: IntType

  """
  Lossless Compression

  Specifies that the output image should be a lossless variant.

  Depends on: `fm=webp`, `fm=jxr`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/lossless-compression)
  """
  lossless: BooleanType

  """
  Watermark Alignment Mode

  Changes the watermark alignment relative to the parent image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-alignment-mode)
  """
  markAlign: [ImgixParamsMarkAlign!]

  """
  Watermark Alpha

  Changes the alpha of the watermark image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-alpha)
  """
  markAlpha: IntType

  """
  Watermark Base Url

  Changes base URL of the watermark image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-base-url)
  """
  markBase: String

  """
  Watermark Fit Mode

  Specifies the fit mode for watermark images.

  Depends on: `mark`, `markw`, `markh`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-fit-mode)
  """
  markFit: ImgixParamsMarkFit

  """
  Watermark Height

  Adjusts the height of the watermark image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-height)
  """
  markH: FloatType

  """
  Watermark If Minimum Height

  Displays the watermark if rendered base image pixel height is equal to or larger than the supplied value

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-if-minimum-height)
  """
  markIfMinHeight: IntType

  """
  Watermark If Minimum Width

  Displays the watermark if rendered base image pixel width is equal to or larger than the supplied value

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-if-minimum-width)
  """
  markIfMinWidth: IntType

  """
  Watermark Padding

  Applies padding to the watermark image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-padding)
  """
  markPad: IntType

  """
  Watermark Rotation

  Rotates a watermark or tiled watermarks by a specified number of degrees.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-rotation)
  """
  markRot: FloatType

  """
  Watermark Scale

  Adjusts the scale of the watermark image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-scale)
  """
  markScale: IntType

  """
  Watermark Tile

  Adds tiled watermark.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-tile)
  """
  markTile: ImgixParamsMarkTile

  """
  Watermark Width

  Adjusts the width of the watermark image.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-width)
  """
  markW: FloatType

  """
  Watermark X Position

  Adjusts the x-offset of the watermark image relative to its parent.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-x-position)
  """
  markX: IntType

  """
  Watermark Y Position

  Adjusts the y-offset of the watermark image relative to its parent.

  Depends on: `mark`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-y-position)
  """
  markY: IntType

  """
  Watermark Image Url

  Specifies the location of the watermark image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/watermark/watermark-image-url)
  """
  mark: String

  """
  Mask Background Color

  Colors the background of the transparent mask area of images

  Depends on: `mask`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/mask-image/mask-background-color)
  """
  maskBg: String

  """
  Mask Type

  Defines the type of mask and specifies the URL if that type is selected.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/mask-image/mask-type)
  """
  mask: String

  """
  Maximum Height

  Specifies the maximum height of the output image in pixels.

  Depends on: `fit=crop`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/maximum-height)
  """
  maxH: IntType

  """
  Maximum Width

  Specifies the maximum width of the output image in pixels.

  Depends on: `fit=crop`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/maximum-width)
  """
  maxW: IntType

  """
  Minimum Height

  Specifies the minimum height of the output image in pixels.

  Depends on: `fit=crop`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/minimum-height)
  """
  minH: IntType

  """
  Minimum Width

  Specifies the minimum width of the output image in pixels.

  Depends on: `fit=crop`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/minimum-width)
  """
  minW: IntType

  """
  Monochrome

  Applies a monochrome effect to the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/monochrome)
  """
  monochrome: String

  """
  Noise Reduction Bound

  Reduces the noise in an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/noise-reduction/noise-reduction-bound)
  """
  nr: IntType

  """
  Noise Reduction Sharpen

  Provides a threshold by which to sharpen an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/noise-reduction/noise-reduction-sharpen)
  """
  nrs: IntType

  """
  Object Removal Negative Prompt

  Provides a negative text suggestion to object-removal-prompt. Used to reduce the probability of a subject, detail, or object appearing in generative output.

  Depends on: `object-removal-rect`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/object-manipulation/object-removal-negative-prompt)
  """
  objectRemovalNegativePrompt: String

  """
  Object Removal Prompt

  Suggest auto generative fill for the object-removal-rect parameter

  Depends on: `object-removal-rect`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/object-manipulation/object-removal-prompt)
  """
  objectRemovalPrompt: String

  """
  Object Removal

  Using a specified rectangle, an object is removed from the image

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/object-manipulation/object-removal)
  """
  objectRemovalRect: String

  """
  Object Removal Seed

  Sets the generative seed value for object-removal. Used to generate new outputs from the same prompt

  Depends on: `object-removal-rect`, `object-removal-prompt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/object-manipulation/object-removal-seed)
  """
  objectRemovalSeed: IntType

  """
  Orientation

  Changes the image orientation.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/rotation/orientation)
  """
  orient: IntType

  """
  Padding Bottom

  Sets bottom padding of an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/padding-bottom)
  """
  padBottom: IntType

  """
  Padding Left

  Sets left padding of an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/padding-left)
  """
  padLeft: IntType

  """
  Padding Right

  Sets right padding of an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/padding-right)
  """
  padRight: IntType

  """
  Padding Top

  Sets top padding of an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/padding-top)
  """
  padTop: IntType

  """
  Padding

  Pads an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/border-and-padding/padding)
  """
  pad: IntType

  """
  Pdf Page Number

  Selects a page from a PDF for display.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/pdf/pdf-page-number)
  """
  page: IntType

  """
  Color Palette Extraction

  Specifies an output format for palette-extraction.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/color-palette/color-palette-extraction)
  """
  palette: ImgixParamsPalette

  """
  Pdf Annotation

  Enables or disables PDF annotation.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/pdf/pdf-annotation)
  """
  pdfAnnotation: BooleanType

  """
  Css Prefix

  Specifies a CSS prefix for all classes in palette-extraction.

  Depends on: `palette=css`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/color-palette/css-prefix)
  """
  prefix: String

  """
  Pixellate

  Applies a pixelation effect to an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/pixellate)
  """
  px: IntType

  """
  Output Quality

  Adjusts the quality of an output image.

  Depends on: `fm=avif`, `fm=jpg`, `fm=pjpg`, `fm=webp`, `fm=jxr`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/output-quality)
  """
  q: IntType

  """
  Rasterize Bypass

  Bypasses all rendering parameters (including default parameters) and serves the original image. Works for svg+xml,x-eps,pdf, and vnd.adobe.illustrator.
  """
  rasterizeBypass: BooleanType

  """
  Source Rectangle Region

  Crops an image to a specified rectangle.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/source-rectangle-region)
  """
  rect: String

  """
  Reverse

  Reverses the frame order on the source animation.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation/reverse)
  """
  reverse: BooleanType

  """
  Rotation Type

  Changes the rotation type.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/rotation/rotation-type)
  """
  rotType: ImgixParamsRotType

  """
  Rotation

  Rotates an image by a specified number of degrees.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/rotation/rotation)
  """
  rot: FloatType

  """
  Saturation

  Adjusts the saturation of an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/saturation)
  """
  sat: IntType

  """
  Sepia Tone

  Applies a sepia effect to an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/stylize/sepia-tone)
  """
  sepia: IntType

  """
  Shadow

  Adjusts the highlights of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/shadow)
  """
  shad: FloatType

  """
  Sharpen

  Adjusts the sharpness of the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/sharpen)
  """
  sharp: FloatType

  """
  Frame Skip

  Skips every Nth frame starting with the first frame.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/animation/frame-skip)
  """
  skip: IntType

  """
  Sanitize Svg

  Specifies whether to sanitize an SVG.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/format/sanitize-svg)
  """
  svgSanitize: BooleanType

  """
  Transparency

  Adds checkerboard behind images which support transparency.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/fill/transparency)
  """
  transparency: ImgixParamsTransparency

  """
  Trim Alpha

  Specifies a trim alpha on a trim operation.

  Depends on: `trim=alpha`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-alpha)
  """
  trimAlpha: FloatType

  """
  Trim Color

  Specifies a trim color on a trim operation.

  Depends on: `trim=color`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-color)
  """
  trimColor: String

  """
  Trim Mean Difference

  Specifies the mean difference on a trim operation.

  Depends on: `trim=auto`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-mean-difference)
  """
  trimMd: FloatType

  """
  Trim Padding

  Pads the area of the source image before trimming.

  Depends on: `trim`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-padding)
  """
  trimPad: IntType

  """
  Trim Standard Deviation

  Specifies the standard deviation on a trim operation.

  Depends on: `trim=auto`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-standard-deviation)
  """
  trimSd: FloatType

  """
  Trim Tolerance

  Specifies the tolerance on a trim operation.

  Depends on: `trim=color`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-tolerance)
  """
  trimTol: FloatType

  """
  Trim Image

  Trims the source image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/trim/trim-image)
  """
  trim: ImgixParamsTrim

  """
  Text Align

  Sets the vertical and horizontal alignment of rendered text relative to the base image.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-align)
  """
  txtAlign: [ImgixParamsTxtAlign!]

  """
  Text Clipping Mode

  Sets the clipping properties of rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-clipping-mode)
  """
  txtClip: [ImgixParamsTxtClip!]

  """
  Text Color

  Specifies the color of rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-color)
  """
  txtColor: String

  """
  Text Fit Mode

  Specifies the fit approach for rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-fit-mode)
  """
  txtFit: ImgixParamsTxtFit

  """
  Text Font

  Selects a font for rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-font)
  """
  txtFont: String

  """
  Text Leading

  Sets the leading (line spacing) for rendered text. Only works on the multi-line text endpoint.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/typesetting-endpoint/text-leading)
  """
  txtLead: IntType

  """
  Text Outline Color

  Specifies a text outline color.

  Depends on: `txt`, `txtline`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-outline-color)
  """
  txtLineColor: String

  """
  Text Outline

  Outlines the rendered text with a specified color.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-outline)
  """
  txtLine: IntType

  """
  Text Padding

  Specifies the padding (in device-independent pixels) between a textbox and the edges of the base image.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-padding)
  """
  txtPad: IntType

  """
  Text Shadow

  Applies a shadow to rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-shadow)
  """
  txtShad: FloatType

  """
  Text Font Size

  Sets the font size of rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-font-size)
  """
  txtSize: IntType

  """
  Text Tracking

  Sets the tracking (letter spacing) for rendered text. Only works on the multi-line text endpoint.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/typesetting-endpoint/text-tracking)
  """
  txtTrack: IntType

  """
  Text Width

  Sets the width of rendered text.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-width)
  """
  txtWidth: IntType

  """
  Text X Position

  Sets the horizontal (x) position of the text in pixels relative to the left edge of the base image.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-x-position)
  """
  txtX: IntType

  """
  Text Y Position

  Sets the vertical (y) position of the text in pixels relative to the top edge of the base image.

  Depends on: `txt`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-y-position)
  """
  txtY: IntType

  """
  Text String

  Sets the text string to render.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/text/text-string)
  """
  txt: String

  """
  Super Resolution Fallback

  Overrides default fallback behavior for super resolution failures

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/super-resolution)
  """
  upscaleFallback: BooleanType

  """
  Super Resolution

  Uses generative AI fill to upscale low resolution images.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/super-resolution)
  """
  upscale: BooleanType

  """
  Unsharp Mask

  Sharpens the source image using an unsharp mask.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/unsharp-mask)
  """
  usm: IntType

  """
  Unsharp Mask Radius

  Specifies the radius for an unsharp mask operation.

  Depends on: `usm`

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/unsharp-mask-radius)
  """
  usmrad: FloatType

  """
  Vibrance

  Adjusts the vibrance of an image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/adjustment/vibrance)
  """
  vib: IntType

  """
  Image Width

  Adjusts the width of the output image.

  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/size/image-width)
  """
  w: FloatType

  """
  Bypasses any [DatoCMS Automatic Image Optimization](https://www.datocms.com/docs/cdn-settings/advanced-asset-settings) that might be set up for the project.

  Exercise caution when using this parameter, as it could significantly increase your bandwidth costs.
  """
  skipDefaultOptimizations: BooleanType
}

enum ImgixParamsAuto {
  enhance
  format
  redeye
  compress
}

enum ImgixParamsBgRemoveFgType {
  auto
  car
}

enum ImgixParamsBlendAlign {
  top
  bottom
  middle
  left
  right
  center
}

enum ImgixParamsBlendCrop {
  top
  bottom
  left
  right
  faces
}

enum ImgixParamsBlendFit {
  clamp
  clip
  crop
  scale
  max
}

enum ImgixParamsBlendMode {
  color
  burn
  dodge
  darken
  difference
  exclusion
  hardlight
  hue
  lighten
  luminosity
  multiply
  overlay
  saturation
  screen
  softlight
  normal
}

enum ImgixParamsBlendSize {
  inherit
}

enum ImgixParamsCh {
  width
  dpr
  saveData
}

enum ImgixParamsCrop {
  top
  bottom
  left
  right
  faces
  entropy
  edges
  focalpoint
}

enum ImgixParamsCs {
  origin
  srgb
  adobergb1998
  tinysrgb
  strip
}

enum ImgixParamsFill {
  solid
  blur
  gen
  generative
  gradient
}

enum ImgixParamsFillGenPos {
  top
  bottom
  middle
  left
  right
  center
}

enum ImgixParamsFillGradientCs {
  linear
  srgb
  oklab
  hsl
  lch
}

enum ImgixParamsFillGradientLinearDirection {
  top
  bottom
  left
  right
}

enum ImgixParamsFillGradientType {
  linear
  radial
}

enum ImgixParamsFit {
  clamp
  clip
  crop
  facearea
  fill
  fillmax
  max
  min
  scale
}

enum ImgixParamsFlip {
  h
  v
  hv
}

enum ImgixParamsFm {
  gif
  jpg
  jp2
  json
  jxr
  pjpg
  mp4
  png
  png8
  png32
  webp
  webm
  blurhash
  avif
}

enum ImgixParamsIptc {
  allow
  block
}

enum ImgixParamsMarkAlign {
  top
  middle
  bottom
  left
  center
  right
}

enum ImgixParamsMarkFit {
  clip
  crop
  fill
  max
  scale
}

enum ImgixParamsMarkTile {
  grid
}

enum ImgixParamsPalette {
  css
  json
}

enum ImgixParamsRotType {
  pivot
  straighten
}

enum ImgixParamsTransparency {
  grid
}

enum ImgixParamsTrim {
  auto
  color
  alpha
}

enum ImgixParamsTxtAlign {
  top
  middle
  bottom
  left
  center
  right
}

enum ImgixParamsTxtClip {
  start
  middle
  end
  ellipsis
}

enum ImgixParamsTxtFit {
  max
}

"""
Specifies how to filter by usage
"""
input InUseFilter {
  """
  Search uploads that are currently used by some record or not
  """
  eq: BooleanType
}

"""
Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar IntType

"""
Specifies how to filter by linking fields
"""
input InverseRelationshipFieldFilterBetweenHomeAndFaq {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [HomeModelFieldsReferencingFaqModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [HomeModelFieldsReferencingFaqModel!]
}

"""
Specifies how to filter by linking fields
"""
input InverseRelationshipFieldFilterBetweenPageAndFaq {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [PageModelFieldsReferencingFaqModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [PageModelFieldsReferencingFaqModel!]
}

"""
Specifies how to filter by linking fields
"""
input InverseRelationshipFieldFilterBetweenRetreatAndFaq {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [RetreatModelFieldsReferencingFaqModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [RetreatModelFieldsReferencingFaqModel!]
}

"""
Specifies how to filter by linking fields
"""
input InverseRelationshipFieldFilterBetweenRoomAndFaq {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [RoomModelFieldsReferencingFaqModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [RoomModelFieldsReferencingFaqModel!]
}

"""
Specifies how to filter linking records
"""
input InverseRelationshipFilterBetweenHomeAndFaq {
  """
  Specifies how to filter by linking fields
  """
  fields: InverseRelationshipFieldFilterBetweenHomeAndFaq

  """
  Specifies how to filter by linking locales
  """
  locales: LinkingLocalesFilter
}

"""
Specifies how to filter linking records
"""
input InverseRelationshipFilterBetweenPageAndFaq {
  """
  Specifies how to filter by linking fields
  """
  fields: InverseRelationshipFieldFilterBetweenPageAndFaq

  """
  Specifies how to filter by linking locales
  """
  locales: LinkingLocalesFilter
}

"""
Specifies how to filter linking records
"""
input InverseRelationshipFilterBetweenRetreatAndFaq {
  """
  Specifies how to filter by linking fields
  """
  fields: InverseRelationshipFieldFilterBetweenRetreatAndFaq

  """
  Specifies how to filter by linking locales
  """
  locales: LinkingLocalesFilter
}

"""
Specifies how to filter linking records
"""
input InverseRelationshipFilterBetweenRoomAndFaq {
  """
  Specifies how to filter by linking fields
  """
  fields: InverseRelationshipFieldFilterBetweenRoomAndFaq

  """
  Specifies how to filter by linking locales
  """
  locales: LinkingLocalesFilter
}

scalar ItemId

"""
Specifies how to filter by ID
"""
input ItemIdFilter {
  """
  Search the record with the specified ID
  """
  eq: ItemId

  """
  Exclude the record with the specified ID
  """
  neq: ItemId

  """
  Search records with the specified IDs
  """
  in: [ItemId]

  """
  Search records that do not have the specified IDs
  """
  notIn: [ItemId]
}

enum ItemStatus {
  draft
  updated
  published
}

scalar JsonField

"""
Specifies how to filter JSON fields
"""
input JsonFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Record of type üß© Layout (layout)
"""
type LayoutRecord implements RecordInterface {
  _allFooterCopyrightLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allFooterLinksCol2Locales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [LinkRecordListListNonNullMultiLocaleField!]
  _allFooterLinksLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [LinkRecordListListNonNullMultiLocaleField!]
  _allNavigationLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [MenuDropdownRecordListListNonNullMultiLocaleField!]
  _allNotificationLinkLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [LinkRecordMultiLocaleField!]
  _allNotificationLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allNotificationTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  footerContact(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  footerCopyright(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  footerLinks(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [LinkRecord!]!
  footerLinksCol2(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [LinkRecord!]!
  id: ItemId!
  navigation(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [MenuDropdownRecord!]!
  notification(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  notificationIsActive: BooleanType!
  notificationLink(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): LinkRecord
  notificationTitle(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  partners: [PartnerBlockRecord!]!
  socialLinks: [SocialLinkRecord!]!
}

"""
Specifies how to filter Single-link fields
"""
input LinkFilter {
  """
  Search for records with an exact match. The specified value must be a Record ID
  """
  eq: ItemId

  """
  Exclude records with an exact match. The specified value must be a Record ID
  """
  neq: ItemId

  """
  Filter records linked to one of the specified records
  """
  in: [ItemId]

  """
  Filter records not linked to one of the specified records
  """
  notIn: [ItemId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

union LinkModelUrlField = HomeRecord | PageRecord | RetreatRecord | RoomRecord

"""
Block of type ‚û°Ô∏è Link (link)
"""
type LinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  externalUrl: String
  id: ItemId!
  isExternal: BooleanType!
  targetBlank: BooleanType!
  text: String
  titleText: BooleanType!
  url: LinkModelUrlField
  urlParams: String
}

type LinkRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [LinkRecord!]!
}

type LinkRecordMultiLocaleField {
  locale: SiteLocale
  value: LinkRecord
}

type LinkRecordNonNullMultiLocaleField {
  locale: SiteLocale
  value: LinkRecord!
}

"""
Linking locales
"""
enum LinkingLocale {
  de
  en
  _nonLocalized
}

"""
Specifies how to filter by linking locales
"""
input LinkingLocalesFilter {
  """
  Filter linking records that link to current record in at least one of the specified locales
  """
  anyIn: [LinkingLocale!]

  """
  Filter linking records that do not link to current record in any of the specified locales
  """
  notIn: [LinkingLocale!]
}

"""
Specifies how to filter Multiple-links fields
"""
input LinksFilter {
  """
  Search for records with an exact match. The specified values must be Record IDs
  """
  eq: [ItemId]

  """
  Filter records linked to all of the specified records. The specified values must be Record IDs
  """
  allIn: [ItemId]

  """
  Filter records linked to at least one of the specified records. The specified values must be Record IDs
  """
  anyIn: [ItemId]

  """
  Filter records not linked to any of the specified records. The specified values must be Record IDs
  """
  notIn: [ItemId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Specifies how to filter by locale
"""
input LocalesFilter {
  """
  Filter records that are localized in all the specified locales
  """
  allIn: [SiteLocale!]

  """
  Filter records that are localized in at least one of the specified locales
  """
  anyIn: [SiteLocale!]

  """
  Filter records that are not localized in any of the specified locales
  """
  notIn: [SiteLocale!]
}

"""
Block of type ‚≠ê Media block external (media_block_external)
"""
type MediaBlockExternalRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  image: ImageBlockRecord
  isVideo: BooleanType!
  video: VideoField
}

"""
Block of type ‚≠ê Media block (media_block)
"""
type MediaBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  image: ImageBlockRecord
  isVideo: BooleanType!
  video: VideoFileField
}

"""
Block of type üîΩ Menu Dropdown (menu_dropdown)
"""
type MenuDropdownRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  dropdownImage: ImageBlockRecord!
  dropdownItems: [LinkRecord!]!
  dropdownTitle: String!
  id: ItemId!
}

type MenuDropdownRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [MenuDropdownRecord!]!
}

scalar MetaTagAttributes

enum MuxThumbnailFormatType {
  jpg
  png
  gif
}

input OfficeModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  address: JsonFilter
  googleDirectionsLink: StringFilter
  subtitle: StringFilter
  title: StringFilter
  OR: [OfficeModelFilter]
  AND: [OfficeModelFilter]
}

enum OfficeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  googleDirectionsLink_ASC
  googleDirectionsLink_DESC
  subtitle_ASC
  subtitle_DESC
  title_ASC
  title_DESC
}

"""
Record of type üè¢ Office (office)
"""
type OfficeRecord implements RecordInterface {
  _allSubtitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  address: JsonField!
  googleDirectionsLink: String
  id: ItemId!
  position: IntType
  subtitle(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

"""
Specifies how to filter by image orientation
"""
input OrientationFilter {
  """
  Search uploads with the specified orientation
  """
  eq: UploadOrientation

  """
  Exclude uploads with the specified orientation
  """
  neq: UploadOrientation
}

"""
Linking fields
"""
enum PageModelFieldsReferencingFaqModel {
  page_sectionBuilder
  page_sectionBuilder__sectionBuilder_sectionBuilder__sectionFaq_faqs
}

input PageModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  parent: ParentFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bookingBar: BooleanFilter
  excerpt: TextFilter
  pageTitle: StringFilter
  seoAnalysis: JsonFilter
  seoMeta: SeoFilter
  slug: SlugFilter
  OR: [PageModelFilter]
  AND: [PageModelFilter]
}

enum PageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bookingBar_ASC
  bookingBar_DESC
  pageTitle_ASC
  pageTitle_DESC
}

"""
Record of type üè° Page (page)
"""
type PageRecord implements RecordInterface {
  _allExcerptLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allPageTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allRedirectLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RedirectLinkRecordMultiLocaleField!]
  _allSectionBuilderLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SectionBuilderRecordNonNullMultiLocaleField!]
  _allSeoMetaLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allSlugLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bookingBar: BooleanType!
  children: [PageRecord!]!
  excerpt(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  id: ItemId!
  image: ImageBlockRecord!
  pageTitle(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  parent: PageRecord
  position: IntType
  redirect(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RedirectLinkRecord
  sectionBuilder(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SectionBuilderRecord!
  seoAnalysis: JsonField
  seoMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  slug(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

"""
Specifies how to filter by parent (tree-like collections only)
"""
input ParentFilter {
  """
  Filter records children of the specified record. Value must be a Record ID
  """
  eq: ItemId

  """
  Filter records with a parent record or not
  """
  exists: BooleanType
}

"""
Block of type üë´ Partner block (partner_block)
"""
type PartnerBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  image: ImageBlockRecord!
  link: String
}

"""
Specifies how to filter by position (sorted and tree-like collections)
"""
input PositionFilter {
  """
  Filter records with a value that's strictly greater than the one specified
  """
  gt: IntType

  """
  Filter records with a value that's less than the one specified
  """
  lt: IntType

  """
  Filter records with a value that's greater than or equal to the one specified
  """
  gte: IntType

  """
  Filter records with a value that's less or equal than the one specified
  """
  lte: IntType

  """
  Search for records with an exact match
  """
  eq: IntType

  """
  Exclude records with an exact match
  """
  neq: IntType
}

"""
Specifies how to filter by publication datetime
"""
input PublishedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
The query root for this schema
"""
type Query {
  """
  Returns meta information regarding a record collection
  """
  _allBlogPostsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: BlogPostModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allFaqCategoriesMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: FaqCategoryModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allFaqsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: FaqModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allFormsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: FormModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allOfficesMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: OfficeModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allPagesMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: PageModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allRedirectsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RedirectModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allRetreatsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RetreatModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allRoomAmenitiesMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RoomAmenityModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allRoomCategoriesMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RoomCategoryModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding a record collection
  """
  _allRoomsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: RoomModelFilter
  ): CollectionMetadata!

  """
  Returns meta information regarding an assets collection
  """
  _allUploadsMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
    filter: UploadFilter
  ): CollectionMetadata!

  """
  Returns the single instance record
  """
  _site(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): Site!

  """
  Returns a collection of records
  """
  allBlogPosts(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): [BlogPostRecord!]!

  """
  Returns a collection of records
  """
  allFaqCategories(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: FaqCategoryModelFilter
    orderBy: [FaqCategoryModelOrderBy] = [_updatedAt_DESC]
  ): [FaqCategoryRecord!]!

  """
  Returns a collection of records
  """
  allFaqs(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: FaqModelFilter
    orderBy: [FaqModelOrderBy] = [position_ASC]
  ): [FaqRecord!]!

  """
  Returns a collection of records
  """
  allForms(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: FormModelFilter
    orderBy: [FormModelOrderBy] = [position_ASC]
  ): [FormRecord!]!

  """
  Returns a collection of records
  """
  allOffices(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: OfficeModelFilter
    orderBy: [OfficeModelOrderBy] = [position_ASC]
  ): [OfficeRecord!]!

  """
  Returns a collection of records
  """
  allPages(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: PageModelFilter
    orderBy: [PageModelOrderBy] = [position_ASC]
  ): [PageRecord!]!

  """
  Returns a collection of records
  """
  allRedirects(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RedirectModelFilter
    orderBy: [RedirectModelOrderBy] = [position_ASC]
  ): [RedirectRecord!]!

  """
  Returns a collection of records
  """
  allRetreats(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RetreatModelFilter
    orderBy: [RetreatModelOrderBy] = [position_ASC]
  ): [RetreatRecord!]!

  """
  Returns a collection of records
  """
  allRoomAmenities(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RoomAmenityModelFilter
    orderBy: [RoomAmenityModelOrderBy] = [_updatedAt_DESC]
  ): [RoomAmenityRecord!]!

  """
  Returns a collection of records
  """
  allRoomCategories(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RoomCategoryModelFilter
    orderBy: [RoomCategoryModelOrderBy] = [_updatedAt_DESC]
  ): [RoomCategoryRecord!]!

  """
  Returns a collection of records
  """
  allRooms(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: RoomModelFilter
    orderBy: [RoomModelOrderBy] = [position_ASC]
  ): [RoomRecord!]!

  """
  Returns a collection of assets
  """
  allUploads(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """
    Skip the first results
    """
    skip: IntType

    """
    Limit the number of results
    """
    first: IntType = 20
    filter: UploadFilter
    orderBy: [UploadOrderBy] = [_createdAt_DESC]
  ): [FileField!]!

  """
  Returns a specific record
  """
  blogPost(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): BlogPostRecord

  """
  Returns the single instance record
  """
  bookingModal(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BookingModalRecord

  """
  Returns a specific record
  """
  faq(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FaqModelFilter
    orderBy: [FaqModelOrderBy] = [position_ASC]
  ): FaqRecord

  """
  Returns a specific record
  """
  faqCategory(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FaqCategoryModelFilter
    orderBy: [FaqCategoryModelOrderBy] = [_updatedAt_DESC]
  ): FaqCategoryRecord

  """
  Returns a specific record
  """
  form(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FormModelFilter
    orderBy: [FormModelOrderBy] = [position_ASC]
  ): FormRecord

  """
  Returns the single instance record
  """
  home(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): HomeRecord

  """
  Returns the single instance record
  """
  layout(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): LayoutRecord

  """
  Returns a specific record
  """
  office(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: OfficeModelFilter
    orderBy: [OfficeModelOrderBy] = [position_ASC]
  ): OfficeRecord

  """
  Returns a specific record
  """
  page(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PageModelFilter
    orderBy: [PageModelOrderBy] = [position_ASC]
  ): PageRecord

  """
  Returns a specific record
  """
  redirect(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: RedirectModelFilter
    orderBy: [RedirectModelOrderBy] = [position_ASC]
  ): RedirectRecord

  """
  Returns a specific record
  """
  retreat(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: RetreatModelFilter
    orderBy: [RetreatModelOrderBy] = [position_ASC]
  ): RetreatRecord

  """
  Returns a specific record
  """
  room(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: RoomModelFilter
    orderBy: [RoomModelOrderBy] = [position_ASC]
  ): RoomRecord

  """
  Returns a specific record
  """
  roomAmenity(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: RoomAmenityModelFilter
    orderBy: [RoomAmenityModelOrderBy] = [_updatedAt_DESC]
  ): RoomAmenityRecord

  """
  Returns a specific record
  """
  roomCategory(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: RoomCategoryModelFilter
    orderBy: [RoomCategoryModelOrderBy] = [_updatedAt_DESC]
  ): RoomCategoryRecord

  """
  Returns the single instance record
  """
  setting(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SettingRecord

  """
  Returns a specific asset
  """
  upload(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: UploadFilter
    orderBy: [UploadOrderBy] = [_createdAt_DESC]
  ): FileField
}

interface RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
}

union RedirectLinkModelUrlField =
  | BlogPostRecord
  | HomeRecord
  | PageRecord
  | RetreatRecord

"""
Block of type ‚û°Ô∏è Redirect Link (redirect_link)
"""
type RedirectLinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  externalUrl: String
  id: ItemId!
  isExternal: BooleanType!
  url: RedirectLinkModelUrlField
}

type RedirectLinkRecordMultiLocaleField {
  locale: SiteLocale
  value: RedirectLinkRecord
}

union RedirectModelDestinationUrlField =
  | BlogPostRecord
  | HomeRecord
  | PageRecord

type RedirectModelDestinationUrlFieldMultiLocaleField {
  locale: SiteLocale
  value: RedirectModelDestinationUrlField
}

input RedirectModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  destinationCustomUrl: StringFilter
  destinationIsExternal: BooleanFilter
  destinationUrl: LinkFilter
  permanent: BooleanFilter
  sourceCustomUrl: StringFilter
  sourceIsExternal: BooleanFilter
  sourceUrl: LinkFilter
  OR: [RedirectModelFilter]
  AND: [RedirectModelFilter]
}

enum RedirectModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  destinationCustomUrl_ASC
  destinationCustomUrl_DESC
  destinationIsExternal_ASC
  destinationIsExternal_DESC
  permanent_ASC
  permanent_DESC
  sourceCustomUrl_ASC
  sourceCustomUrl_DESC
  sourceIsExternal_ASC
  sourceIsExternal_DESC
}

union RedirectModelSourceUrlField = BlogPostRecord | HomeRecord | PageRecord

type RedirectModelSourceUrlFieldMultiLocaleField {
  locale: SiteLocale
  value: RedirectModelSourceUrlField
}

"""
Record of type üîÄ Redirect (redirect)
"""
type RedirectRecord implements RecordInterface {
  _allDestinationCustomUrlLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allDestinationUrlLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RedirectModelDestinationUrlFieldMultiLocaleField!]
  _allSourceCustomUrlLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allSourceUrlLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RedirectModelSourceUrlFieldMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  destinationCustomUrl(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  destinationIsExternal: BooleanType!
  destinationUrl(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RedirectModelDestinationUrlField
  id: ItemId!
  permanent: BooleanType!
  position: IntType
  sourceCustomUrl(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  sourceIsExternal: BooleanType!
  sourceUrl(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RedirectModelSourceUrlField
}

"""
Specifies how to filter by upload type
"""
input ResolutionFilter {
  """
  Search uploads with the specified resolution
  """
  eq: ResolutionType

  """
  Exclude uploads with the specified resolution
  """
  neq: ResolutionType

  """
  Search uploads with the specified resolutions
  """
  in: [ResolutionType]

  """
  Search uploads without the specified resolutions
  """
  notIn: [ResolutionType]
}

enum ResolutionType {
  icon
  small
  medium
  large
}

type ResponsiveImage {
  alt: String
  aspectRatio: FloatType!
  base64: String
  bgColor: String
  height: IntType!
  sizes: String!
  src: String!
  srcSet: String!
  title: String
  webpSrcSet: String!
  width: IntType!
}

"""
Linking fields
"""
enum RetreatModelFieldsReferencingFaqModel {
  retreat_sectionBuilder
  retreat_sectionBuilder__sectionBuilderDetail_sectionBuilder__sectionFaq_faqs
}

input RetreatModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  bookingBar: BooleanFilter
  date: TextFilter
  overline: StringFilter
  price: TextFilter
  seoAnalysis: JsonFilter
  seoMeta: SeoFilter
  shortDescription: TextFilter
  slug: SlugFilter
  title: StringFilter
  OR: [RetreatModelFilter]
  AND: [RetreatModelFilter]
}

enum RetreatModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bookingBar_ASC
  bookingBar_DESC
  overline_ASC
  overline_DESC
  title_ASC
  title_DESC
}

"""
Record of type üõñ Retreat (retreat)
"""
type RetreatRecord implements RecordInterface {
  _allContentLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [DetailContentRecordNonNullMultiLocaleField!]
  _allDateLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allOverlineLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPriceLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allRedirectLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RedirectLinkRecordMultiLocaleField!]
  _allSectionBuilderLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SectionBuilderDetailRecordNonNullMultiLocaleField!]
  _allSeoMetaLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allShortDescriptionLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allSlugLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  bookingBar: BooleanType!
  content(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DetailContentRecord!
  date(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  gallery: [ImageBlockRecord!]!
  id: ItemId!
  image: ImageBlockRecord!
  overline(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  position: IntType
  price(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  redirect(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RedirectLinkRecord
  sectionBuilder(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SectionBuilderDetailRecord!
  seoAnalysis: JsonField
  seoMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  shortDescription(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  slug(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

union RichTextModelRichTextBlocksField = ImageBlockRecord | LinkRecord

type RichTextModelRichTextField {
  blocks: [RichTextModelRichTextBlocksField!]!
  links: [String!]!
  value: JsonField!
}

"""
Block of type üìú Rich Text (rich_text)
"""
type RichTextRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  richText: RichTextModelRichTextField
}

input RoomAmenityModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  icon: StringFilter
  title: StringFilter
  OR: [RoomAmenityModelFilter]
  AND: [RoomAmenityModelFilter]
}

enum RoomAmenityModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  icon_ASC
  icon_DESC
  title_ASC
  title_DESC
}

"""
Record of type üöø Room amenity (room_amenity)
"""
type RoomAmenityRecord implements RecordInterface {
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  icon: String!
  id: ItemId!
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

type RoomAmenityRecordListListNonNullMultiLocaleField {
  locale: SiteLocale
  value: [RoomAmenityRecord!]!
}

input RoomCategoryModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  title: StringFilter
  OR: [RoomCategoryModelFilter]
  AND: [RoomCategoryModelFilter]
}

enum RoomCategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""
Record of type üõÄ Room category (room_category)
"""
type RoomCategoryRecord implements RecordInterface {
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
}

type RoomCategoryRecordMultiLocaleField {
  locale: SiteLocale
  value: RoomCategoryRecord
}

"""
Linking fields
"""
enum RoomModelFieldsReferencingFaqModel {
  room_sectionBuilder
  room_sectionBuilder__sectionBuilderDetail_sectionBuilder__sectionFaq_faqs
}

input RoomModelFilter {
  _createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _locales: LocalesFilter
  amenities: LinksFilter
  bookingBar: BooleanFilter
  category: LinkFilter
  overline: StringFilter
  people: TextFilter
  seoAnalysis: JsonFilter
  seoMeta: SeoFilter
  shortDescription: TextFilter
  size: TextFilter
  slug: SlugFilter
  title: StringFilter
  OR: [RoomModelFilter]
  AND: [RoomModelFilter]
}

enum RoomModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  bookingBar_ASC
  bookingBar_DESC
  overline_ASC
  overline_DESC
  title_ASC
  title_DESC
}

"""
Record of type üõãÔ∏è Room (room)
"""
type RoomRecord implements RecordInterface {
  _allAmenitiesLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RoomAmenityRecordListListNonNullMultiLocaleField!]
  _allCategoryLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RoomCategoryRecordMultiLocaleField!]
  _allContentLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [DetailContentRecordNonNullMultiLocaleField!]
  _allOverlineLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allPeopleLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allRedirectLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RedirectLinkRecordMultiLocaleField!]
  _allRequestLinkLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [LinkRecordNonNullMultiLocaleField!]
  _allSectionBuilderLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SectionBuilderDetailRecordMultiLocaleField!]
  _allSeoMetaLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [SeoFieldMultiLocaleField!]
  _allShortDescriptionLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allSizeLocales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allSlugLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _allTitleLocales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringNonNullMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  amenities(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [RoomAmenityRecord!]!
  bookingBar: BooleanType!
  category(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RoomCategoryRecord
  content(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DetailContentRecord!
  gallery: [ImageBlockRecord!]!
  id: ItemId!
  image: ImageBlockRecord!
  overline(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  people(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  position: IntType
  redirect(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): RedirectLinkRecord
  requestLink(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): LinkRecord!
  sectionBuilder(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SectionBuilderDetailRecord
  seoAnalysis: JsonField
  seoMeta(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SeoField
  shortDescription(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  size(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  slug(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
}

"""
Block of type üí¨ Section About (section_about)
"""
type SectionAboutRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  button: LinkRecord
  id: ItemId!
  imageBottom: ImageBlockRecord!
  imageTop: ImageBlockRecord!
  sectionPadding: SectionPaddingRecord
  subtitle: String
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
}

union SectionBuilderDetailModelSectionBuilderField =
  | SectionCtaRecord
  | SectionFaqRecord
  | SectionFormRecord
  | SectionSliderCardRecord
  | SectionSliderRecord
  | SectionTextDisplayRecord

"""
Block of type üèóÔ∏è Section builder detail (section_builder_detail)
"""
type SectionBuilderDetailRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  sectionBuilder: [SectionBuilderDetailModelSectionBuilderField!]!
}

type SectionBuilderDetailRecordMultiLocaleField {
  locale: SiteLocale
  value: SectionBuilderDetailRecord
}

type SectionBuilderDetailRecordNonNullMultiLocaleField {
  locale: SiteLocale
  value: SectionBuilderDetailRecord!
}

union SectionBuilderModelSectionBuilderField =
  | SectionAboutRecord
  | SectionCtaRecord
  | SectionFaqRecord
  | SectionFormRecord
  | SectionHeroHomeRecord
  | SectionHeroRecord
  | SectionListRecord
  | SectionListingRecord
  | SectionPrivacyRecord
  | SectionSliderCardRecord
  | SectionSliderRecord
  | SectionTextDisplayRecord
  | SectionTextImageRecord
  | SectionTextRecord

"""
Block of type üèóÔ∏è Section builder (section_builder)
"""
type SectionBuilderRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  sectionBuilder: [SectionBuilderModelSectionBuilderField!]!
}

type SectionBuilderRecordNonNullMultiLocaleField {
  locale: SiteLocale
  value: SectionBuilderRecord!
}

"""
Block of type üåÜ Section Cta (section_cta)
"""
type SectionCtaRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  button: LinkRecord
  id: ItemId!
  image: ImageBlockRecord
  imageGallery: [ImageBlockRecord!]!
  layoutFifty: String
  overline: String
  sectionPadding: SectionPaddingRecord
  subtitle: String
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  variant: String
}

"""
Block of type ‚ùì Section faq (section_faq)
"""
type SectionFaqRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  categories: [FaqCategoryRecord!]!
  faqs: [FaqRecord!]!
  id: ItemId!
  pickFromCategory: BooleanType!
  sectionPadding: SectionPaddingRecord
  title: String
  useTitleFromCategory: BooleanType!
}

"""
Block of type ‚úâÔ∏è Section form (section_form)
"""
type SectionFormRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  form: FormRecord!
  id: ItemId!
  sectionPadding: SectionPaddingRecord
}

"""
Block of type ‚úâÔ∏è Section form request (section_form_request)
"""
type SectionFormRequestRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  sectionId: String
  sectionPadding: SectionPaddingRecord
}

"""
Block of type üì∑ Section Gallery (section_gallery)
"""
type SectionGalleryRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  galery: [ImageBlockRecord!]!
  id: ItemId!
  sectionPadding: SectionPaddingRecord
}

"""
Block of type üöÄ Section Hero Home (section_hero_home)
"""
type SectionHeroHomeRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  image: ImageBlockRecord!
  linkTo: String
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
}

"""
Block of type üöÄ Section Hero (section_hero)
"""
type SectionHeroRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  breadcrumbs: BooleanType!
  id: ItemId!
  overline: String
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
}

"""
Block of type üóÑÔ∏è Section List (section_list)
"""
type SectionListRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  allPackages: BooleanType!
  allRooms: BooleanType!
  filterRoomCategories: BooleanType!
  id: ItemId!
  packages: [RetreatRecord!]!
  pagination: BooleanType!
  paginationAmount: IntType
  roomCategories: [RoomCategoryRecord!]!
  roomListLayout: String
  rooms: [RoomRecord!]!
  sectionPadding: SectionPaddingRecord
  variant: String!
}

"""
Block of type üîó Section Listing (section_listing)
"""
type SectionListingRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  links: [PageRecord!]!
  sectionPadding: SectionPaddingRecord
}

"""
Block of type ‚ÜïÔ∏è Section Padding (section_padding)
"""
type SectionPaddingRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  customPaddingBottom: BooleanType!
  customPaddingTop: BooleanType!
  id: ItemId!
  paddingBottom: String
  paddingTop: String
}

"""
Block of type üë´ Section Partners (section_partner)
"""
type SectionPartnerRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  partners: [PartnerBlockRecord!]!
  sectionId: String
  sectionPadding: SectionPaddingRecord
  title: String
}

"""
Block of type üõÇ Section Privacy (section_privacy)
"""
type SectionPrivacyRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  sectionId: String
  sectionPadding: SectionPaddingRecord
}

"""
Block of type üì∑ Section Slider Cards (section_slider_card)
"""
type SectionSliderCardRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  button: LinkRecord
  galery: [ImageBlockRecord!]!
  id: ItemId!
  overline: String
  sectionPadding: SectionPaddingRecord
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
}

"""
Block of type üì∑ Section Slider (section_slider)
"""
type SectionSliderRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  allPackages: BooleanType!
  allRooms: BooleanType!
  button: LinkRecord
  gallery: [ImageBlockRecord!]!
  id: ItemId!
  overline: String
  packages: [RetreatRecord!]!
  rooms: [RoomRecord!]!
  sectionPadding: SectionPaddingRecord
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  variant: String!
}

"""
Block of type üìë Section Text display (section_text_display)
"""
type SectionTextDisplayRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  button: LinkRecord
  id: ItemId!
  overline: String
  sectionPadding: SectionPaddingRecord
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  textColTwo(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String!
  variant: String!
}

"""
Block of type üìë Section Text image (section_text_image)
"""
type SectionTextImageRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  button: LinkRecord
  id: ItemId!
  image: ImageBlockRecord
  sectionPadding: SectionPaddingRecord
  text(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  title(
    """
    Process content as markdown
    """
    markdown: Boolean
  ): String
  variant: String
}

"""
Block of type üìë Section Text (section_text)
"""
type SectionTextRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  sectionPadding: SectionPaddingRecord
  text: RichTextRecord!
}

type SeoField {
  description: String
  image: FileField
  noIndex: BooleanType
  title: String
  twitterCard: String
}

type SeoFieldMultiLocaleField {
  locale: SiteLocale
  value: SeoField
}

"""
Specifies how to filter SEO meta tags fields
"""
input SeoFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Record of type ‚öôÔ∏è Settings (setting)
"""
type SettingRecord implements RecordInterface {
  _allLinkText404Locales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allText404Locales(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _allTitle404Locales(
    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): [StringMultiLocaleField!]
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _locales: [SiteLocale!]!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  linkText404(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  season: String!
  text404(
    """
    Process content as markdown
    """
    markdown: Boolean

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  title404(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  translations: JsonField
}

type Site {
  favicon: FileField
  faviconMetaTags(
    """
    The variants to build
    """
    variants: [FaviconType] = [icon]
  ): [Tag!]!
  globalSeo(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): GlobalSeoField
  locales: [SiteLocale!]!
  noIndex: BooleanType
}

enum SiteLocale {
  de
  en
}

"""
Specifies how to filter Slug fields
"""
input SlugFilter {
  """
  Search for records with an exact match
  """
  eq: String

  """
  Exclude records with an exact match
  """
  neq: String

  """
  Filter records that have one of the specified slugs
  """
  in: [String]

  """
  Filter records that do have one of the specified slugs
  """
  notIn: [String]
}

"""
Block of type üëç Social link (social_link)
"""
type SocialLinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  icon: String!
  id: ItemId!
  link: String!
}

"""
Block of type ‚ÜîÔ∏è Spacer (spacer)
"""
type SpacerRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
  space: String!
}

"""
Specifies how to filter by status
"""
input StatusFilter {
  """
  Search the record with the specified status
  """
  eq: ItemStatus

  """
  Exclude the record with the specified status
  """
  neq: ItemStatus

  """
  Search records with the specified statuses
  """
  in: [ItemStatus]

  """
  Search records without the specified statuses
  """
  notIn: [ItemStatus]
}

"""
Specifies how to filter Single-line string fields
"""
input StringFilter {
  """
  Filter records based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude records based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or empty string)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """
  Search for records with an exact match
  """
  eq: String

  """
  Exclude records with an exact match
  """
  neq: String

  """
  Filter records that equal one of the specified values
  """
  in: [String]

  """
  Filter records that do not equal one of the specified values
  """
  notIn: [String]

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

input StringMatchesFilter {
  pattern: String!
  caseSensitive: BooleanType = false
  regexp: BooleanType = true
}

type StringMultiLocaleField {
  locale: SiteLocale
  value: String
}

type StringNonNullMultiLocaleField {
  locale: SiteLocale
  value: String!
}

type Tag {
  attributes: MetaTagAttributes
  content: String
  tag: String!
}

"""
Block of type üìñ Text field (text_field)
"""
type TextFieldRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  fieldId: String!
  halfSize: BooleanType!
  hidden: BooleanType!
  id: ItemId!
  label: String!
  placeholder: String
  required: BooleanType!
  variant: String!
}

"""
Specifies how to filter text fields
"""
input TextFilter {
  """
  Filter records based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude records based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or empty string)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

"""
Specifies how to filter by upload type
"""
input TypeFilter {
  """
  Search uploads with the specified type
  """
  eq: UploadType

  """
  Exclude uploads with the specified type
  """
  neq: UploadType

  """
  Search uploads with the specified types
  """
  in: [UploadType]

  """
  Search uploads without the specified types
  """
  notIn: [UploadType]
}

"""
Specifies how to filter by update datetime
"""
input UpdatedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Specifies how to filter by default alt
"""
input UploadAltFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Search the uploads with the specified alt
  """
  eq: String

  """
  Exclude the uploads with the specified alt
  """
  neq: String

  """
  Search uploads with the specified values as default alt
  """
  in: [String]

  """
  Search uploads that do not have the specified values as default alt
  """
  notIn: [String]

  """
  Filter uploads with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Specifies how to filter by auhtor
"""
input UploadAuthorFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Filter uploads with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Specifies how to filter by basename
"""
input UploadBasenameFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter
}

"""
Specifies how to filter by colors
"""
input UploadColorsFilter {
  """
  Filter uploads that have the specified colors
  """
  contains: ColorBucketType

  """
  Filter uploads that have all of the specified colors
  """
  allIn: [ColorBucketType]

  """
  Filter uploads that have at least one of the specified colors
  """
  anyIn: [ColorBucketType]

  """
  Filter uploads that do not have any of the specified colors
  """
  notIn: [ColorBucketType]

  """
  Search for uploads with an exact match
  """
  eq: [ColorBucketType]
}

"""
Specifies how to filter by copyright
"""
input UploadCopyrightFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Specifies how to filter by creation datetime
"""
input UploadCreatedAtFilter {
  """
  Search for uploads with an exact match
  """
  eq: DateTime

  """
  Exclude uploads with an exact match
  """
  neq: DateTime

  """
  Filter uploads with a value that's less than the one specified
  """
  lt: DateTime

  """
  Filter uploads with a value that's less or equal than the one specified
  """
  lte: DateTime

  """
  Filter uploads with a value that's strictly greater than the one specified
  """
  gt: DateTime

  """
  Filter uploads with a value that's greater than or equal to the one specified
  """
  gte: DateTime
}

"""
Specifies how to filter by filename
"""
input UploadFilenameFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter
}

input UploadFilter {
  type: TypeFilter
  inUse: InUseFilter
  resolution: ResolutionFilter
  size: UploadSizeFilter
  tags: UploadTagsFilter
  smartTags: UploadTagsFilter
  colors: UploadColorsFilter
  orientation: OrientationFilter
  id: UploadIdFilter
  mimeType: UploadMimeTypeFilter
  format: UploadFormatFilter
  height: UploadHeightFilter
  width: UploadWidthFilter
  alt: UploadAltFilter
  title: UploadTitleFilter
  notes: UploadNotesFilter
  md5: UploadMd5Filter
  author: UploadAuthorFilter
  copyright: UploadCopyrightFilter
  basename: UploadBasenameFilter
  filename: UploadFilenameFilter
  _createdAt: UploadCreatedAtFilter
  _updatedAt: UploadUpdatedAtFilter
  OR: [UploadFilter]
  AND: [UploadFilter]
}

"""
Specifies how to filter by format
"""
input UploadFormatFilter {
  """
  Search the asset with the specified format
  """
  eq: String

  """
  Exclude the asset with the specified format
  """
  neq: String

  """
  Search assets with the specified formats
  """
  in: [String]

  """
  Search assets that do not have the specified formats
  """
  notIn: [String]
}

"""
Specifies how to filter by height
"""
input UploadHeightFilter {
  """
  Search all assets larger than the specified height
  """
  gt: IntType

  """
  Search all assets smaller than the specified height
  """
  lt: IntType

  """
  Search all assets larger or equal to the specified height
  """
  gte: IntType

  """
  Search all assets larger or equal to the specified height
  """
  lte: IntType

  """
  Search assets with the specified height
  """
  eq: IntType

  """
  Search assets that do not have the specified height
  """
  neq: IntType
}

scalar UploadId

"""
Specifies how to filter by ID
"""
input UploadIdFilter {
  """
  Search the asset with the specified ID
  """
  eq: UploadId

  """
  Exclude the asset with the specified ID
  """
  neq: UploadId

  """
  Search assets with the specified IDs
  """
  in: [UploadId]

  """
  Search assets that do not have the specified IDs
  """
  notIn: [UploadId]
}

"""
Specifies how to filter by MD5
"""
input UploadMd5Filter {
  """
  Search the asset with the specified MD5
  """
  eq: String

  """
  Exclude the asset with the specified MD5
  """
  neq: String

  """
  Search assets with the specified MD5s
  """
  in: [String]

  """
  Search assets that do not have the specified MD5s
  """
  notIn: [String]
}

"""
Specifies how to filter by mime type
"""
input UploadMimeTypeFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Search the asset with the specified mime type
  """
  eq: String

  """
  Exclude the asset with the specified mime type
  """
  neq: String

  """
  Search assets with the specified mime types
  """
  in: [String]

  """
  Search assets that do not have the specified mime types
  """
  notIn: [String]
}

"""
Specifies how to filter by notes
"""
input UploadNotesFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

enum UploadOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  size_ASC
  size_DESC
  resolution_ASC
  resolution_DESC
  filename_ASC
  filename_DESC
  basename_ASC
  basename_DESC
  mimeType_ASC
  mimeType_DESC
  format_ASC
  format_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  id_ASC
  id_DESC
}

enum UploadOrientation {
  landscape
  portrait
  square
}

"""
Specifies how to filter by size
"""
input UploadSizeFilter {
  """
  Search all assets larger than the specified size (in bytes)
  """
  gt: IntType

  """
  Search all assets smaller than the specified size (in bytes)
  """
  lt: IntType

  """
  Search all assets larger or equal to the specified size (in bytes)
  """
  gte: IntType

  """
  Search all assets larger or equal to the specified size (in bytes)
  """
  lte: IntType

  """
  Search assets with the specified size (in bytes)
  """
  eq: IntType

  """
  Search assets that do not have the specified size (in bytes)
  """
  neq: IntType
}

"""
Specifies how to filter by tags
"""
input UploadTagsFilter {
  """
  Filter uploads linked to the specified tag
  """
  contains: String

  """
  Filter uploads linked to all of the specified tags
  """
  allIn: [String!]

  """
  Filter uploads linked to at least one of the specified tags
  """
  anyIn: [String!]

  """
  Filter uploads not linked to any of the specified tags
  """
  notIn: [String!]

  """
  Search for uploads with an exact match
  """
  eq: [String!]
}

"""
Specifies how to filter by default title
"""
input UploadTitleFilter {
  """
  Filter uploads based on a regular expression
  """
  matches: StringMatchesFilter

  """
  Exclude uploads based on a regular expression
  """
  notMatches: StringMatchesFilter

  """
  Search the asset with the specified title
  """
  eq: String

  """
  Exclude the asset with the specified title
  """
  neq: String

  """
  Search assets with the specified as default title
  """
  in: [String]

  """
  Search assets that do not have the specified as default title
  """
  notIn: [String]

  """
  Filter assets with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

enum UploadType {
  image
  audio
  video
  richtext
  presentation
  spreadsheet
  pdfdocument
  archive
}

"""
Specifies how to filter by update datetime
"""
input UploadUpdatedAtFilter {
  """
  Search for uploads with an exact match
  """
  eq: DateTime

  """
  Exclude uploads with an exact match
  """
  neq: DateTime

  """
  Filter uploads with a value that's less than the one specified
  """
  lt: DateTime

  """
  Filter uploads with a value that's less or equal than the one specified
  """
  lte: DateTime

  """
  Filter uploads with a value that's strictly greater than the one specified
  """
  gt: DateTime

  """
  Filter uploads with a value that's greater than or equal to the one specified
  """
  gte: DateTime
}

type UploadVideoField {
  alt(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """
    Maximum image dimension (defaults to 24px)
    """
    size: Int! = 24

    """
    Image quality (defaults to 70%)
    """
    quality: Int! = 70

    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String
  blurhash: String
  duration: Int
  framerate: Int
  height: IntType!
  mp4Url(
    """
    Pick highest resolution available up to the specified argument
    """
    res: VideoMp4Res

    """
    Pick the exact resolution quality specified in the argument
    """
    exactRes: VideoMp4Res
  ): String
  muxAssetId: String!
  muxPlaybackId: String!
  streamingUrl: String!
  thumbhash: String
  thumbnailUrl(
    """
    The file extension of the requested image format. Either png, jpg or gif
    """
    format: MuxThumbnailFormatType = jpg
  ): String!
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  width: IntType!
}

"""
Specifies how to filter by width
"""
input UploadWidthFilter {
  """
  Search all assets larger than the specified width
  """
  gt: IntType

  """
  Search all assets smaller than the specified width
  """
  lt: IntType

  """
  Search all assets larger or equal to the specified width
  """
  gte: IntType

  """
  Search all assets larger or equal to the specified width
  """
  lte: IntType

  """
  Search assets with the specified width
  """
  eq: IntType

  """
  Search assets that do not have the specified width
  """
  neq: IntType
}

"""
Block of type üì∫ Video (video_block)
"""
type VideoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """
  Editing URL
  """
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """
  Generates SEO and Social card meta tags to be used in your frontend
  """
  _seoMetaTags(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  asset: VideoFileField!
  id: ItemId!
}

type VideoField {
  height: IntType!
  provider: String!
  providerUid: String!
  thumbnailUrl: String!
  title: String!
  url: String!
  width: IntType!
}

type VideoFileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """
    Maximum image dimension (defaults to 24px)
    """
    size: Int! = 24

    """
    Image quality (defaults to 70%)
    """
    quality: Int! = 70

    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType!
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams

    """
    Specify a custom `sizes` attribute for the image
    """
    sizes: String

    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """
    The locale to use to fetch the field's content
    """
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """
    Imgix transformations to apply to the image
    """
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField!
  width: IntType!
}

enum VideoMp4Res {
  low
  medium
  high
}

type focalPoint {
  x: FloatType!
  y: FloatType!
}
